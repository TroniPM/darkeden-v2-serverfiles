//////////////////////////////////////////////////////////////////////
// 
// Filename    : GCDeleteInventoryItem.cpp 
// Written By  : Reiot
// Description : 
// 
//////////////////////////////////////////////////////////////////////

// include files
#include "GCDeleteInventoryItem.h"

//////////////////////////////////////////////////////////////////////
// 입력스트림(버퍼)으로부터 데이타를 읽어서 패킷을 초기화한다.
//////////////////////////////////////////////////////////////////////
void GCDeleteInventoryItem::read ( SocketInputStream & iStream ) 
	 
{
	__BEGIN_TRY

	iStream.read( m_ObjectID );

	__END_CATCH
}

		    
//////////////////////////////////////////////////////////////////////
// 출력스트림(버퍼)으로 패킷의 바이너리 이미지를 보낸다.
//////////////////////////////////////////////////////////////////////
void GCDeleteInventoryItem::write ( SocketOutputStream & oStream ) const 
     
{
	__BEGIN_TRY

	oStream.write( m_ObjectID );

	__END_CATCH
}


//////////////////////////////////////////////////////////////////////
// execute packet's handler
//////////////////////////////////////////////////////////////////////
void GCDeleteInventoryItem::execute ( Player * pPlayer ) 
	 
{
	__BEGIN_TRY
		
	GCDeleteInventoryItemHandler::execute ( this , pPlayer );
		
	__END_CATCH
}


//////////////////////////////////////////////////////////////////////
// get debug string
//////////////////////////////////////////////////////////////////////
string GCDeleteInventoryItem::toString () const
	
{
	StringStream msg;
	msg << "GCDeleteInventoryItem("
		<< "ObjectID:" << m_ObjectID
		<< ")";
	return msg.toString();
}

