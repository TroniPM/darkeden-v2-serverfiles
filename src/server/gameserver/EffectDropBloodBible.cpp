
//////////////////////////////////////////////////////////////////////////////
// Filename    : EffectDropBloodBible.cpp
// Written by  :
// Description : 
//////////////////////////////////////////////////////////////////////////////

#include "Tile.h"
#include "Zone.h"

#include "EffectDropBloodBible.h"

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
EffectDropBloodBible::EffectDropBloodBible(Zone* pZone, ZoneCoord_t zoneX, ZoneCoord_t zoneY) 
	throw(Error)
{
	__BEGIN_TRY

	m_pZone = pZone;
	m_X = zoneX;
	m_Y = zoneY;
	m_ItemType = 0;

	__END_CATCH
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
void EffectDropBloodBible::affect()
	throw(Error)
{
	__BEGIN_TRY
	__END_CATCH 
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
void EffectDropBloodBible::unaffect()
	throw(Error)
{
	__BEGIN_TRY

	Assert(m_pZone!=NULL);

    Tile& tile = m_pZone->getTile(m_X, m_Y);
	tile.deleteEffect(m_ObjectID);

	__END_CATCH
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
string EffectDropBloodBible::toString()
	
{
	__BEGIN_TRY

	StringStream msg;

	msg << "EffectDropBloodBible("
		<< "ObjectID:" << getObjectID()
		<< ")";

	return msg.toString();

	__END_CATCH

}

EffectDropBloodBibleLoader* g_pEffectDropBloodBibleLoader = NULL;
